{"ast":null,"code":"var _jsxFileName = \"/Users/danieljsottile/thinkful/Petful/DSA-Petful/petful-client-template/src/components/root/Root.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport HomePage from '../HomePage/HomePage';\nimport AdoptPage from '../AdoptPage/AdoptPage';\nimport ErrorPage from '../ErrorPage/ErrorPage';\nimport UserContext from '../../contexts/UserContext';\nimport apiService from '../../services/apiService';\n\nconst Queue = require('../../queue/Queue');\n\nexport class Root extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cats: new Queue(),\n      dogs: new Queue(),\n      people: new Queue(),\n      submitted: false,\n      waiting: true,\n      savedName: '',\n      na: {\n        value: '',\n        touched: false\n      }\n    };\n\n    this.setName = n => {\n      this.setState({\n        na: {\n          value: n,\n          touched: true\n        }\n      });\n    };\n\n    this.validateName = () => {\n      const n = this.state.na.value;\n\n      if (!n) {\n        return 'name is required';\n      }\n    };\n\n    this.handleUpdatePeople = n => {\n      apiService.postPerson(n).then(data => {\n        let pData = data.first;\n        let pQueue = new Queue();\n        pQueue.enqueue(pData.data);\n        let np = pData.next;\n\n        while (np) {\n          pQueue.enqueue(np.data);\n          np = np.next;\n        }\n\n        this.setState({\n          people: pQueue\n        });\n      });\n      this.setState({\n        waiting: true,\n        submitted: true,\n        savedName: n\n      });\n    };\n\n    this.handleWaiting = () => {\n      this.setState({\n        waiting: false\n      });\n    };\n\n    this.peoplePush = () => {\n      const current = this.state.people.first.data;\n      console.log(current);\n\n      if (current !== this.state.savedName) {\n        this.handleDeletePerson();\n      } else {\n        this.handleWaiting();\n      }\n    };\n\n    this.handleDeletePerson = () => {\n      apiService.deletePerson();\n      console.log(this.state.people);\n      this.state.people.dequeue();\n      const queue = this.state.people;\n      this.setState({\n        people: queue\n      });\n    };\n  }\n\n  componentDidMount() {\n    apiService.getPets().then(data => {\n      let cData = data.cats.first;\n      let cQueue = new Queue();\n      cQueue.enqueue(cData.data);\n      let nc = cData.next;\n\n      while (nc) {\n        cQueue.enqueue(nc.data);\n        nc = nc.next;\n      }\n\n      this.setState({\n        cats: cQueue\n      });\n      let dData = data.dogs.first;\n      let dQueue = new Queue();\n      dQueue.enqueue(dData.data);\n      let nd = dData.next;\n\n      while (nd) {\n        dQueue.enqueue(nd.data);\n        nd = nd.next;\n      }\n\n      this.setState({\n        dogs: dQueue\n      });\n    });\n    apiService.getPeople().then(data => {\n      if (data.first) {\n        let pData = data.first;\n        let pQueue = new Queue();\n        pQueue.enqueue(pData.data);\n        let np = pData.next;\n\n        while (np) {\n          pQueue.enqueue(np.data);\n          np = np.next;\n        }\n\n        this.setState({\n          people: pQueue,\n          na: {\n            value: '',\n            touched: false\n          }\n        });\n      } else {\n        let pQueue = new Queue();\n        this.setState({\n          people: pQueue,\n          na: {\n            value: '',\n            touched: false\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(UserContext.Provider, {\n      value: {\n        cats: this.state.cats,\n        dogs: this.state.dogs,\n        people: this.state.people,\n        name: this.state.na,\n        submitted: this.state.submitted,\n        waiting: this.state.waiting,\n        savedName: this.state.savedName,\n        validateName: this.validateName,\n        setName: this.setName,\n        handleUpdatePeople: this.handleUpdatePeople,\n        peoplePush: this.peoplePush,\n        handleWaiting: this.handleWaiting,\n        handleAdoptAnimal: this.handleAdoptAnimal,\n        handleDeletePerson: this.handleDeletePerson\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(ErrorPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: '/',\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: '/adopt',\n      component: AdoptPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })))))));\n  }\n\n}\n;\nexport default Root;","map":{"version":3,"sources":["/Users/danieljsottile/thinkful/Petful/DSA-Petful/petful-client-template/src/components/root/Root.js"],"names":["React","Component","Fragment","Route","Switch","BrowserRouter","HomePage","AdoptPage","ErrorPage","UserContext","apiService","Queue","require","Root","state","cats","dogs","people","submitted","waiting","savedName","na","value","touched","setName","n","setState","validateName","handleUpdatePeople","postPerson","then","data","pData","first","pQueue","enqueue","np","next","handleWaiting","peoplePush","current","console","log","handleDeletePerson","deletePerson","dequeue","queue","componentDidMount","getPets","cData","cQueue","nc","dData","dQueue","nd","getPeople","render","name","handleAdoptAnimal"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport {Route, Switch, BrowserRouter} from 'react-router-dom';\nimport HomePage from '../HomePage/HomePage';\nimport AdoptPage from '../AdoptPage/AdoptPage';\nimport ErrorPage from '../ErrorPage/ErrorPage';\nimport UserContext from '../../contexts/UserContext';\nimport apiService from '../../services/apiService';\n\nconst Queue = require('../../queue/Queue');\n\nexport class Root extends Component {\n\n  state = {\n    cats: new Queue(),\n    dogs: new Queue(),\n    people: new Queue(),\n    submitted: false,\n    waiting: true,\n    savedName: '',\n    na: {value: '', touched: false}\n  }\n\n  componentDidMount() {\n    apiService.getPets()\n      .then(data => {\n        let cData = data.cats.first;\n        let cQueue = new Queue();\n        cQueue.enqueue(cData.data)\n        \n        let nc = cData.next;\n        while(nc) {\n          cQueue.enqueue(nc.data)\n          nc = nc.next\n        }\n        this.setState({cats: cQueue})\n\n\n        let dData = data.dogs.first;\n        let dQueue = new Queue();\n        dQueue.enqueue(dData.data)\n        \n        let nd = dData.next;\n        while(nd) {\n          dQueue.enqueue(nd.data)\n          nd = nd.next\n        }\n        this.setState({dogs: dQueue})\n      })\n    \n    apiService.getPeople()\n      .then(data => {\n        if (data.first){\n        let pData = data.first;\n        let pQueue = new Queue();\n        pQueue.enqueue(pData.data)\n        \n        let np = pData.next;\n        while(np) {\n          pQueue.enqueue(np.data)\n          np = np.next\n        }\n        this.setState({people: pQueue, na: {value: '', touched: false}})\n      } else {\n        let pQueue = new Queue()\n        this.setState({people: pQueue, na: {value: '', touched: false}})\n      }\n      })\n  }\n\n  setName = (n) => {\n    this.setState({ na: { value: n, touched: true } });\n  }\n\n  validateName = () => {\n    const n = this.state.na.value;\n    if (!n) {\n      return 'name is required';\n    } \n  }\n\n  \n\n  handleUpdatePeople = (n) => {\n    \n    \n    apiService.postPerson(n)\n      .then(data => {\n        let pData = data.first;\n        let pQueue = new Queue();\n        pQueue.enqueue(pData.data)\n        \n        let np = pData.next;\n        while(np) {\n          pQueue.enqueue(np.data)\n          np = np.next\n        }\n        this.setState({people: pQueue})\n      });\n\n    this.setState({waiting: true, submitted: true, savedName: n});\n  }\n\n  handleWaiting = () => {\n    this.setState({waiting: false})\n  }\n\n  peoplePush = () => {\n    const current = this.state.people.first.data;\n    console.log(current);\n    if (current !== this.state.savedName) {\n      this.handleDeletePerson();\n    } else {\n      this.handleWaiting();\n    }\n  }\n\n  handleDeletePerson = () => {\n    apiService.deletePerson()\n    console.log(this.state.people)\n    this.state.people.dequeue();\n    const queue = this.state.people;\n    this.setState({people: queue})\n  }\n\n\n\n  render() {\n    return (\n      <UserContext.Provider value = {{\n        cats: this.state.cats,\n        dogs: this.state.dogs,\n        people: this.state.people,\n        name: this.state.na,\n        submitted: this.state.submitted,\n        waiting: this.state.waiting,\n        savedName: this.state.savedName,\n        validateName: this.validateName,\n        setName: this.setName,\n        handleUpdatePeople: this.handleUpdatePeople,\n        peoplePush: this.peoplePush,\n        handleWaiting: this.handleWaiting,\n        handleAdoptAnimal: this.handleAdoptAnimal,\n        handleDeletePerson: this.handleDeletePerson\n      }}>\n        <Fragment>\n          <main>\n          <BrowserRouter>\n          <ErrorPage>\n            <Switch>\n              <Route\n                exact path = {'/'}\n                component = {HomePage}/>\n              <Route\n                exact path = {'/adopt'}\n                component = {AdoptPage}/>\n            </Switch>\n            </ErrorPage>\n          </BrowserRouter>\n          </main>\n        </Fragment>\n      </UserContext.Provider>\n    );\n  };\n};\n\nexport default Root\n\n"]},"metadata":{},"sourceType":"module"}