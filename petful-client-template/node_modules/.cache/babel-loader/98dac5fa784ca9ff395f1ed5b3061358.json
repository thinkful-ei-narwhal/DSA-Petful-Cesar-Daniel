{"ast":null,"code":"var _jsxFileName = \"/Users/danieljsottile/thinkful/Petful/DSA-Petful/petful-client-template/src/components/root/Root.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport HomePage from '../HomePage/HomePage';\nimport AdoptPage from '../AdoptPage/AdoptPage';\nimport ErrorPage from '../ErrorPage/ErrorPage';\nimport UserContext from '../../contexts/UserContext';\nimport apiService from '../../services/apiService';\n\nconst Queue = require('../../queue/Queue');\n\nexport class Root extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cats: new Queue(),\n      dogs: new Queue(),\n      people: new Queue(),\n      name: {\n        value: '',\n        touched: false\n      }\n    };\n  }\n\n  componentDidMount() {\n    apiService.getPets().then(data => {\n      let cData = data.cats.first;\n      this.setState(this.state.cats.enqueue(cData.data));\n      let nc = cData.next;\n\n      while (nc) {\n        this.setState(this.state.cats.enqueue(nc.data));\n        nc = nc.next;\n      }\n\n      let dData = data.dogs.first;\n      this.setState(this.state.dogs.enqueue(dData.data));\n      let nd = dData.next;\n\n      while (nd) {\n        this.setState(this.state.dogs.enqueue(nd.data));\n        nd = nd.next;\n      }\n    });\n    apiService.getPeople().then(data => {\n      let pData = data.first;\n      this.setState(this.state.people.enqueue(pData.data));\n      let np = pData.next;\n\n      while (np) {\n        this.setState(this.state.people.enqueue(np.data));\n        np = np.next;\n      }\n    });\n  }\n\n  validateName() {\n    const n = this.state.name.value;\n\n    if (!n) {\n      return 'name is required';\n    }\n  }\n\n  setName() {\n    this.setState({\n      name: {\n        value: name,\n        touched: true\n      }\n    });\n  }\n\n  handleUpdatePeople() {\n    const n = this.state.name.value;\n    apiService.postPerson(n).then(people => this.setState(this.state.people.enqueue(people.last)));\n  }\n\n  render() {\n    return React.createElement(UserContext.Provider, {\n      value: {\n        cats: this.state.cats,\n        dogs: this.state.dogs,\n        people: this.state.people,\n        validateName: this.validateName,\n        setName: this.setName,\n        handleUpdatePeople: this.handleUpdatePeople\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(ErrorPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: '/',\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: '/adopt',\n      component: AdoptPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })))))));\n  }\n\n}\n;\nexport default Root;","map":{"version":3,"sources":["/Users/danieljsottile/thinkful/Petful/DSA-Petful/petful-client-template/src/components/root/Root.js"],"names":["React","Component","Fragment","Route","Switch","BrowserRouter","HomePage","AdoptPage","ErrorPage","UserContext","apiService","Queue","require","Root","state","cats","dogs","people","name","value","touched","componentDidMount","getPets","then","data","cData","first","setState","enqueue","nc","next","dData","nd","getPeople","pData","np","validateName","n","setName","handleUpdatePeople","postPerson","last","render"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport {Route, Switch, BrowserRouter} from 'react-router-dom';\nimport HomePage from '../HomePage/HomePage';\nimport AdoptPage from '../AdoptPage/AdoptPage';\nimport ErrorPage from '../ErrorPage/ErrorPage';\nimport UserContext from '../../contexts/UserContext';\nimport apiService from '../../services/apiService';\n\nconst Queue = require('../../queue/Queue');\n\nexport class Root extends Component {\n\n  state = {\n    cats: new Queue(),\n    dogs: new Queue(),\n    people: new Queue(),\n    name: {value: '', touched: false}\n  }\n\n  componentDidMount() {\n    apiService.getPets()\n      .then(data => {\n        let cData = data.cats.first;\n        this.setState(this.state.cats.enqueue(cData.data))\n        let nc = cData.next;\n        while(nc) {\n          this.setState(this.state.cats.enqueue(nc.data))\n          nc = nc.next\n        }\n        let dData = data.dogs.first;\n        this.setState(this.state.dogs.enqueue(dData.data))\n        let nd = dData.next;\n        while(nd) {\n          this.setState(this.state.dogs.enqueue(nd.data))\n          nd = nd.next\n        }\n      })\n    \n    apiService.getPeople()\n      .then(data => {\n        let pData = data.first;\n        this.setState(this.state.people.enqueue(pData.data))\n        let np = pData.next;\n        while(np) {\n          this.setState(this.state.people.enqueue(np.data))\n          np = np.next\n        }\n      })\n  }\n\n  validateName() {\n    const n = this.state.name.value;\n    if (!n) {\n      return 'name is required';\n    } \n  }\n  \n  setName() {\n    this.setState({ name: { value: name, touched: true } });\n  }\n\n  handleUpdatePeople() {\n    const n = this.state.name.value;\n    apiService.postPerson(n)\n      .then((people) => this.setState(this.state.people.enqueue(people.last)));\n  }\n\n\n\n  render() {\n    return (\n      <UserContext.Provider value = {{\n        cats: this.state.cats,\n        dogs: this.state.dogs,\n        people: this.state.people,\n        validateName: this.validateName,\n        setName: this.setName,\n        handleUpdatePeople: this.handleUpdatePeople\n      }}>\n        <Fragment>\n          <main>\n          <BrowserRouter>\n          <ErrorPage>\n            <Switch>\n              <Route\n                exact path = {'/'}\n                component = {HomePage}/>\n              <Route\n                exact path = {'/adopt'}\n                component = {AdoptPage}/>\n            </Switch>\n            </ErrorPage>\n          </BrowserRouter>\n          </main>\n        </Fragment>\n      </UserContext.Provider>\n    );\n  };\n};\n\nexport default Root\n\n"]},"metadata":{},"sourceType":"module"}