{"ast":null,"code":"import config from '../config';\nconst apiService = {\n  getPets() {\n    let error;\n    return fetch(`${config.API_ENDPOINT}/pets`, {\n      method: 'GET',\n      headers: {}\n    }).then(res => {\n      if (!res.ok) {\n        error = {\n          code: res.status\n        };\n      }\n\n      return res.json();\n    }).then(data => {\n      if (error) {\n        error.message = data.message;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  },\n\n  deletePet(type) {\n    let error;\n    return fetch(`${config.API_ENDPOINT}/pets/${type}`, {\n      method: 'DELETE',\n      headers: {}\n    }).then(res => {\n      if (!res.ok) {\n        error = {\n          code: res.status\n        };\n      }\n\n      return res.json();\n    }).then(data => {\n      if (error) {\n        error.message = data.message;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  },\n\n  getPeople() {\n    let error;\n    return fetch(`${config.API_ENDPOINT}/people`, {\n      method: 'GET',\n      headers: {}\n    }).then(res => {\n      if (!res.ok) {\n        error = {\n          code: res.status\n        };\n      }\n\n      return res.json();\n    }).then(data => {\n      if (error) {\n        error.message = data.message;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  },\n\n  postPerson(n) {\n    console.log(n);\n    return fetch(`${config.API_ENDPOINT}/people`, {\n      method: 'POST',\n      headers: {},\n      body: JSON.stringify({\n        name: n\n      })\n    }).then(res => console.log(res)(!res.ok) ? res.json().then(e => Promise.reject(e)) : res.json());\n  },\n\n  deletePerson() {\n    let error;\n    return fetch(`${config.API_ENDPOINT}/pets`, {\n      method: 'DELETE',\n      headers: {}\n    }).then(res => {\n      if (!res.ok) {\n        error = {\n          code: res.status\n        };\n      }\n\n      return res.json();\n    }).then(data => {\n      if (error) {\n        error.message = data.message;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  }\n\n};\nexport default apiService;","map":{"version":3,"sources":["/Users/danieljsottile/thinkful/Petful/DSA-Petful/petful-client-template/src/services/apiService.js"],"names":["config","apiService","getPets","error","fetch","API_ENDPOINT","method","headers","then","res","ok","code","status","json","data","message","Promise","reject","deletePet","type","getPeople","postPerson","n","console","log","body","JSON","stringify","name","e","deletePerson"],"mappings":"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","sourcesContent":["import config from '../config';\n\nconst apiService = {\n  getPets(){\n    let error;\n    return fetch(`${config.API_ENDPOINT}/pets`, {\n      method: 'GET',\n      headers: {}\n      })\n      .then(res => {\n        if (!res.ok) {\n          error = { code: res.status};\n        }\n        return res.json();\n      })\n      .then(data => {\n        if (error) {\n          error.message = data.message;\n          return Promise.reject(error);\n        }\n        return data})\n  },\n\n  deletePet(type) {\n    let error;\n    return fetch(`${config.API_ENDPOINT}/pets/${type}`, {\n      method: 'DELETE',\n      headers: {\n      },\n      })\n      .then(res => {\n        if (!res.ok) {\n          error = { code: res.status};\n        }\n        return res.json();\n      })\n      .then(data => {\n        if (error) {\n          error.message = data.message;\n          return Promise.reject(error);\n        }\n        return data})\n  },\n\n  getPeople(){\n    let error;\n    return fetch(`${config.API_ENDPOINT}/people`, {\n      method: 'GET',\n      headers: {}\n      })\n      .then(res => {\n        if (!res.ok) {\n          error = { code: res.status};\n        }\n        return res.json();\n      })\n      .then(data => {\n        if (error) {\n          error.message = data.message;\n          return Promise.reject(error);\n        }\n        return data})\n  },\n\n  postPerson(n){\n    console.log(n);\n    return fetch(`${config.API_ENDPOINT}/people`, {\n      method: 'POST',\n      headers: {\n      },\n      body: JSON.stringify({\n        name: n\n      }),\n    })\n      .then(res =>\n        console.log(res)\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n\n  deletePerson() {\n    let error;\n    return fetch(`${config.API_ENDPOINT}/pets`, {\n      method: 'DELETE',\n      headers: {\n      },\n      })\n      .then(res => {\n        if (!res.ok) {\n          error = { code: res.status};\n        }\n        return res.json();\n      })\n      .then(data => {\n        if (error) {\n          error.message = data.message;\n          return Promise.reject(error);\n        }\n        return data})\n  },\n}\n\nexport default apiService;"]},"metadata":{},"sourceType":"module"}