{"ast":null,"code":"var _jsxFileName = \"/Users/danieljsottile/thinkful/Petful/DSA-Petful/petful-client-template/src/components/root/Root.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport HomePage from '../HomePage/HomePage';\nimport AdoptPage from '../AdoptPage/AdoptPage';\nimport ErrorPage from '../ErrorPage/ErrorPage';\nimport UserContext from '../../contexts/UserContext';\nimport apiService from '../../services/apiService';\n\nconst Queue = require('../../queue/Queue');\n\nexport class Root extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cats: new Queue(),\n      dogs: new Queue(),\n      people: new Queue(),\n      na: {\n        value: '',\n        touched: false\n      }\n    };\n\n    this.setName = n => {\n      this.setState({\n        na: {\n          value: n,\n          touched: true\n        }\n      });\n    };\n\n    this.validateName = () => {\n      const n = this.state.na.value;\n\n      if (!n) {\n        return 'name is required';\n      }\n    };\n\n    this.handleUpdatePeople = () => {\n      const n = this.state.na.value;\n      apiService.postPerson(n).then(people => this.setState(this.state.people.enqueue(people.last)));\n    };\n  }\n\n  componentDidMount() {\n    apiService.getPets().then(data => {\n      let cData = data.cats.first;\n      let cQueue = new Queue();\n      cQueue.enqueue(cData.data);\n      let nc = cData.next;\n\n      while (nc) {\n        cQueue.enqueue(nc.data);\n        nc = nc.next;\n      }\n\n      this.setState({\n        cats: cQueue\n      });\n      let dData = data.dogs.first;\n      let dQueue = new Queue();\n      dQueue.enqueue(dData.data);\n      let nd = dData.next;\n\n      while (nd) {\n        dQueue.enqueue(nd.data);\n        nd = nd.next;\n      }\n\n      this.setState({\n        dogs: dQueue\n      });\n    });\n    apiService.getPeople().then(data => {\n      let pData = data.first;\n      let pQueue = new Queue();\n      pQueue.enqueue(pData.data);\n      let np = pData.next;\n\n      while (np) {\n        pQueue.enqueue(np.data);\n        np = np.next;\n      }\n\n      this.setState({\n        people: pQueue\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(UserContext.Provider, {\n      value: {\n        cats: this.state.cats,\n        dogs: this.state.dogs,\n        people: this.state.people,\n        name: this.state.na,\n        validateName: this.validateName,\n        setName: this.setName,\n        handleUpdatePeople: this.handleUpdatePeople,\n        handleAdoptAnimal: this.handleAdoptAnimal,\n        handleDeletePerson: this.handleDeletePerson\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(ErrorPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: '/',\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: '/adopt',\n      component: AdoptPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })))))));\n  }\n\n}\n;\nexport default Root;","map":{"version":3,"sources":["/Users/danieljsottile/thinkful/Petful/DSA-Petful/petful-client-template/src/components/root/Root.js"],"names":["React","Component","Fragment","Route","Switch","BrowserRouter","HomePage","AdoptPage","ErrorPage","UserContext","apiService","Queue","require","Root","state","cats","dogs","people","na","value","touched","setName","n","setState","validateName","handleUpdatePeople","postPerson","then","enqueue","last","componentDidMount","getPets","data","cData","first","cQueue","nc","next","dData","dQueue","nd","getPeople","pData","pQueue","np","render","name","handleAdoptAnimal","handleDeletePerson"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport {Route, Switch, BrowserRouter} from 'react-router-dom';\nimport HomePage from '../HomePage/HomePage';\nimport AdoptPage from '../AdoptPage/AdoptPage';\nimport ErrorPage from '../ErrorPage/ErrorPage';\nimport UserContext from '../../contexts/UserContext';\nimport apiService from '../../services/apiService';\n\nconst Queue = require('../../queue/Queue');\n\nexport class Root extends Component {\n\n  state = {\n    cats: new Queue(),\n    dogs: new Queue(),\n    people: new Queue(),\n    na: {value: '', touched: false}\n  }\n\n  componentDidMount() {\n    apiService.getPets()\n      .then(data => {\n        let cData = data.cats.first;\n        let cQueue = new Queue;\n        cQueue.enqueue(cData.data)\n        \n        let nc = cData.next;\n        while(nc) {\n          cQueue.enqueue(nc.data)\n          nc = nc.next\n        }\n        this.setState({cats: cQueue})\n\n\n        let dData = data.dogs.first;\n        let dQueue = new Queue;\n        dQueue.enqueue(dData.data)\n        \n        let nd = dData.next;\n        while(nd) {\n          dQueue.enqueue(nd.data)\n          nd = nd.next\n        }\n        this.setState({dogs: dQueue})\n      })\n    \n    apiService.getPeople()\n      .then(data => {\n        let pData = data.first;\n        let pQueue = new Queue;\n        pQueue.enqueue(pData.data)\n        \n        let np = pData.next;\n        while(np) {\n          pQueue.enqueue(np.data)\n          np = np.next\n        }\n        this.setState({people: pQueue})\n      })\n  }\n\n  setName = (n) => {\n    this.setState({ na: { value: n, touched: true } });\n  }\n\n  validateName = () => {\n    const n = this.state.na.value;\n    if (!n) {\n      return 'name is required';\n    } \n  }\n\n  \n\n  handleUpdatePeople = () => {\n    const n = this.state.na.value;\n    apiService.postPerson(n)\n      .then((people) => this.setState(this.state.people.enqueue(people.last)));\n  }\n\n\n\n  render() {\n    return (\n      <UserContext.Provider value = {{\n        cats: this.state.cats,\n        dogs: this.state.dogs,\n        people: this.state.people,\n        name: this.state.na,\n        validateName: this.validateName,\n        setName: this.setName,\n        handleUpdatePeople: this.handleUpdatePeople,\n        handleAdoptAnimal: this.handleAdoptAnimal,\n        handleDeletePerson: this.handleDeletePerson\n      }}>\n        <Fragment>\n          <main>\n          <BrowserRouter>\n          <ErrorPage>\n            <Switch>\n              <Route\n                exact path = {'/'}\n                component = {HomePage}/>\n              <Route\n                exact path = {'/adopt'}\n                component = {AdoptPage}/>\n            </Switch>\n            </ErrorPage>\n          </BrowserRouter>\n          </main>\n        </Fragment>\n      </UserContext.Provider>\n    );\n  };\n};\n\nexport default Root\n\n"]},"metadata":{},"sourceType":"module"}