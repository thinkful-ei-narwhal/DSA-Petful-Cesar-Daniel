{"ast":null,"code":"const apiService = {\n  getPets() {\n    let error;\n    return fetch(`${config.API_ENDPOINT}/pets`, {\n      method: 'GET',\n      headers: {}\n    }).then(res => {\n      if (!res.ok) {\n        error = {\n          code: res.status\n        };\n      }\n\n      return res.json();\n    }).then(data => {\n      if (error) {\n        error.message = data.message;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  },\n\n  // delete pets =[\n  getPeople() {\n    let error;\n    return fetch(`${config.API_ENDPOINT}/people`, {\n      method: 'GET',\n      headers: {}\n    }).then(res => {\n      if (!res.ok) {\n        error = {\n          code: res.status\n        };\n      }\n\n      return res.json();\n    }).then(data => {\n      if (error) {\n        error.message = data.message;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  } // remove people =[\n\n\n};\nexport default apiService;","map":{"version":3,"sources":["/Users/danieljsottile/thinkful/Petful/DSA-Petful/petful-client-template/src/services/apiService.js"],"names":["apiService","getPets","error","fetch","config","API_ENDPOINT","method","headers","then","res","ok","code","status","json","data","message","Promise","reject","getPeople"],"mappings":"AAAA,MAAMA,UAAU,GAAG;AACjBC,EAAAA,OAAO,GAAE;AACP,QAAIC,KAAJ;AACA,WAAOC,KAAK,CAAE,GAAEC,MAAM,CAACC,YAAa,OAAxB,EAAgC;AAC1CC,MAAAA,MAAM,EAAE,KADkC;AAE1CC,MAAAA,OAAO,EAAE;AAFiC,KAAhC,CAAL,CAIJC,IAJI,CAICC,GAAG,IAAI;AACX,UAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACXR,QAAAA,KAAK,GAAG;AAAES,UAAAA,IAAI,EAAEF,GAAG,CAACG;AAAZ,SAAR;AACD;;AACD,aAAOH,GAAG,CAACI,IAAJ,EAAP;AACD,KATI,EAUJL,IAVI,CAUCM,IAAI,IAAI;AACZ,UAAIZ,KAAJ,EAAW;AACTA,QAAAA,KAAK,CAACa,OAAN,GAAgBD,IAAI,CAACC,OAArB;AACA,eAAOC,OAAO,CAACC,MAAR,CAAef,KAAf,CAAP;AACD;;AACD,aAAOY,IAAP;AAAY,KAfT,CAAP;AAgBD,GAnBgB;;AAqBjB;AAEAI,EAAAA,SAAS,GAAE;AACT,QAAIhB,KAAJ;AACA,WAAOC,KAAK,CAAE,GAAEC,MAAM,CAACC,YAAa,SAAxB,EAAkC;AAC5CC,MAAAA,MAAM,EAAE,KADoC;AAE5CC,MAAAA,OAAO,EAAE;AAFmC,KAAlC,CAAL,CAIJC,IAJI,CAICC,GAAG,IAAI;AACX,UAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACXR,QAAAA,KAAK,GAAG;AAAES,UAAAA,IAAI,EAAEF,GAAG,CAACG;AAAZ,SAAR;AACD;;AACD,aAAOH,GAAG,CAACI,IAAJ,EAAP;AACD,KATI,EAUJL,IAVI,CAUCM,IAAI,IAAI;AACZ,UAAIZ,KAAJ,EAAW;AACTA,QAAAA,KAAK,CAACa,OAAN,GAAgBD,IAAI,CAACC,OAArB;AACA,eAAOC,OAAO,CAACC,MAAR,CAAef,KAAf,CAAP;AACD;;AACD,aAAOY,IAAP;AAAY,KAfT,CAAP;AAgBD,GAzCgB,CA2CjB;;;AA3CiB,CAAnB;AA8CA,eAAed,UAAf","sourcesContent":["const apiService = {\n  getPets(){\n    let error;\n    return fetch(`${config.API_ENDPOINT}/pets`, {\n      method: 'GET',\n      headers: {}\n      })\n      .then(res => {\n        if (!res.ok) {\n          error = { code: res.status};\n        }\n        return res.json();\n      })\n      .then(data => {\n        if (error) {\n          error.message = data.message;\n          return Promise.reject(error);\n        }\n        return data})\n  },\n\n  // delete pets =[\n\n  getPeople(){\n    let error;\n    return fetch(`${config.API_ENDPOINT}/people`, {\n      method: 'GET',\n      headers: {}\n      })\n      .then(res => {\n        if (!res.ok) {\n          error = { code: res.status};\n        }\n        return res.json();\n      })\n      .then(data => {\n        if (error) {\n          error.message = data.message;\n          return Promise.reject(error);\n        }\n        return data})\n  },\n\n  // remove people =[\n}\n\nexport default apiService;"]},"metadata":{},"sourceType":"module"}